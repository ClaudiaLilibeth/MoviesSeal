// Generated by Dagger (https://dagger.dev).
package com.example.local.di;

import com.example.local.repository.GenreRepository;
import com.example.local.repository.GenresDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideGenreRepositoryFactory implements Factory<GenreRepository> {
  private final AppModule module;

  private final Provider<GenresDao> daoProvider;

  public AppModule_ProvideGenreRepositoryFactory(AppModule module,
      Provider<GenresDao> daoProvider) {
    this.module = module;
    this.daoProvider = daoProvider;
  }

  @Override
  public GenreRepository get() {
    return provideGenreRepository(module, daoProvider.get());
  }

  public static AppModule_ProvideGenreRepositoryFactory create(AppModule module,
      Provider<GenresDao> daoProvider) {
    return new AppModule_ProvideGenreRepositoryFactory(module, daoProvider);
  }

  public static GenreRepository provideGenreRepository(AppModule instance, GenresDao dao) {
    return Preconditions.checkNotNullFromProvides(instance.provideGenreRepository(dao));
  }
}
