// Generated by Dagger (https://dagger.dev).
package com.example.local.di;

import com.example.local.repository.DataBase;
import com.example.local.repository.GenresDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideGenresDaoFactory implements Factory<GenresDao> {
  private final AppModule module;

  private final Provider<DataBase> dbProvider;

  public AppModule_ProvideGenresDaoFactory(AppModule module, Provider<DataBase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public GenresDao get() {
    return provideGenresDao(module, dbProvider.get());
  }

  public static AppModule_ProvideGenresDaoFactory create(AppModule module,
      Provider<DataBase> dbProvider) {
    return new AppModule_ProvideGenresDaoFactory(module, dbProvider);
  }

  public static GenresDao provideGenresDao(AppModule instance, DataBase db) {
    return Preconditions.checkNotNullFromProvides(instance.provideGenresDao(db));
  }
}
